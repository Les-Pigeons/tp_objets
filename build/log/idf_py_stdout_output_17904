[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.1\examples\get-started\tp\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c: In function 'smbus_send_byte':
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c:242:18: warning: passing argument 1 of '_is_init' from incompatible pointer type [-Wincompatible-pointer-types]
  242 |     if (_is_init(smbus_info))
      |                  ^~~~~~~~~~
      |                  |
      |                  const smbus_info_t *
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c:214:49: note: expected 'const i2c_lcd1602_info_t *' but argument is of type 'const smbus_info_t *'
  214 | static bool _is_init(const i2c_lcd1602_info_t * i2c_lcd1602_info)
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c: In function 'app_main':
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c:557:13: warning: unused variable 'data' [-Wunused-variable]
  557 |     uint8_t data[2];
      |             ^~~~
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c:535:9: warning: unused variable 'i2c_master_port' [-Wunused-variable]
  535 |     int i2c_master_port = 0;
      |         ^~~~~~~~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c: At top level:
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c:258:18: warning: 'mpu9250_register_write_byte' defined but not used [-Wunused-function]
  258 | static esp_err_t mpu9250_register_write_byte(uint8_t reg_addr, uint8_t data)
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/main/main.c:209:18: warning: 'mpu9250_register_read' defined but not used [-Wunused-function]
  209 | static esp_err_t mpu9250_register_read(uint8_t reg_addr, uint8_t *data, size_t len)
      |                  ^~~~~~~~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable main.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/build/main.bin
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.1\examples\get-started\tp\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/build/main.bin"
main.bin binary size 0x304c0 bytes. Smallest app partition is 0x100000 bytes. 0xcfb40 bytes (81%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.1.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/frameworks/esp-idf-v5.1.1/examples/get-started/tp/build -P C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p com5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port com5
Connecting...
Failed to get PID of a device on com5, using standard reset sequence.
....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 48:e7:29:a1:28:6c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16692...
Writing at 0x00001000... (50 %)
Writing at 0x00007689... (100 %)
Wrote 26640 bytes (16692 compressed) at 0x00001000 in 0.6 seconds (effective 382.1 kbit/s)...
Hash of data verified.
Compressed 197824 bytes to 108883...
Writing at 0x00010000... (14 %)
Writing at 0x0001d2df... (28 %)
Writing at 0x00022a70... (42 %)
Writing at 0x00028a29... (57 %)
Writing at 0x0002eec8... (71 %)
Writing at 0x00036a88... (85 %)
Writing at 0x0003c627... (100 %)
Wrote 197824 bytes (108883 compressed) at 0x00010000 in 2.6 seconds (effective 603.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 910.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
